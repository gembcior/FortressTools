message(STATUS "${STM32_CHIP} is ${STM32_CHIP_TYPE} device")
string(TOLOWER ${STM32_CHIP_TYPE} STM32_CHIP_TYPE_LOWER)

set(CMSIS_COMMON_HEADERS
    arm_common_tables.h
    arm_const_structs.h
    arm_math.h
    core_cmFunc.h
    core_cmInstr.h
    core_cmSimd.h
)

if(STM32_FAMILY STREQUAL "F1")
    if(NOT STM32Cube_DIR)
        set(STM32Cube_DIR "/opt/STM32Cube_FW_F1_V1.2.0")
        message(STATUS "No STM32Cube_DIR specified, using default: " ${STM32Cube_DIR})
    endif()

    list(APPEND CMSIS_COMMON_HEADERS core_cm3.h)
    set(CMSIS_DEVICE_HEADERS stm32f1xx.h system_stm32f1xx.h)
    set(CMSIS_DEVICE_SOURCES system_stm32f1xx.c)
elseif(STM32_FAMILY STREQUAL "F2")
    if(NOT STM32Cube_DIR)
        set(STM32Cube_DIR "/opt/STM32Cube_FW_F2_V1.1.1")
        message(STATUS "No STM32Cube_DIR specified, using default: " ${STM32Cube_DIR})
    endif()

    string(REGEX REPLACE "^(2[01]7).[BCDEFG]" "\\1" STM32_DEVICE_NUM ${STM32_CHIP_TYPE})

    list(APPEND CMSIS_COMMON_HEADERS core_cm4.h)
    set(CMSIS_DEVICE_HEADERS stm32f2xx.h system_stm32f2xx.h)
    set(CMSIS_DEVICE_SOURCES system_stm32f2xx.c)
elseif(STM32_FAMILY STREQUAL "F3")
    if(NOT STM32Cube_DIR)
        set(STM32Cube_DIR "/opt/STM32Cube_FW_F3_V1.6.0")
        message(STATUS "No STM32Cube_DIR specified, using default: " ${STM32Cube_DIR})
    endif()

    string(REGEX REPLACE "^(3..).(.)" "\\1x\\2" STM32_STARTUP_NAME ${STM32_CODE})
    string(TOLOWER ${STM32_STARTUP_NAME} STM32_STARTUP_NAME_LOWER)

    list(APPEND CMSIS_COMMON_HEADERS core_cm4.h)
    set(CMSIS_DEVICE_HEADERS stm32f3xx.h system_stm32f3xx.h)
    set(CMSIS_DEVICE_SOURCES system_stm32f3xx.c)
elseif(STM32_FAMILY STREQUAL "F4")
    if(NOT STM32Cube_DIR)
        set(STM32Cube_DIR "/opt/STM32Cube_FW_F4_V1.8.0")
        message(STATUS "No STM32Cube_DIR specified, using default: " ${STM32Cube_DIR})
    endif()

    list(APPEND CMSIS_COMMON_HEADERS core_cm4.h)
    set(CMSIS_DEVICE_HEADERS stm32f4xx.h system_stm32f4xx.h)
    #    set(CMSIS_DEVICE_SOURCES system_stm32f4xx.c)
elseif(STM32_FAMILY STREQUAL "F7")
    if(NOT STM32Cube_DIR)
        set(STM32Cube_DIR "/opt/STM32Cube_FW_F7_V1.3.0")
        message(STATUS "No STM32Cube_DIR specified, using default: " ${STM32Cube_DIR})
    endif()

    list(APPEND CMSIS_COMMON_HEADERS core_cm7.h)
    set(CMSIS_DEVICE_HEADERS stm32f7xx.h system_stm32f7xx.h)
    set(CMSIS_DEVICE_SOURCES system_stm32f7xx.c)
elseif(STM32_FAMILY STREQUAL "F0")
    if(NOT STM32Cube_DIR)
        set(STM32Cube_DIR "/opt/STM32Cube_FW_F0_V1.4.0")
        message(STATUS "No STM32Cube_DIR specified, using default: " ${STM32Cube_DIR})
    endif()

    list(APPEND CMSIS_COMMON_HEADERS core_cm3.h)
    set(CMSIS_DEVICE_HEADERS stm32f0xx.h system_stm32f0xx.h)
    set(CMSIS_DEVICE_SOURCES system_stm32f0xx.c)
elseif(STM32_FAMILY STREQUAL "L0")
    if(NOT STM32Cube_DIR)
        set(STM32Cube_DIR "/opt/STM32Cube_FW_L0_V1.7.0")
        message(STATUS "No STM32Cube_DIR specified, using default: " ${STM32Cube_DIR})
    endif()

    list(APPEND CMSIS_COMMON_HEADERS core_cm0.h)
    set(CMSIS_DEVICE_HEADERS stm32l0xx.h system_stm32l0xx.h)
    set(CMSIS_DEVICE_SOURCES system_stm32l0xx.c)
elseif(STM32_FAMILY STREQUAL "L1")
    if(NOT STM32Cube_DIR)
        set(STM32Cube_DIR "/opt/STM32Cube_FW_L1_V1.8.0")
        message(WARNING "No STM32Cube_DIR specified, using default: " ${STM32Cube_DIR})
    endif()
    list(APPEND CMSIS_COMMON_HEADERS core_cm3.h)
    set(CMSIS_DEVICE_HEADERS stm32l1xx.h system_stm32l1xx.h)
    set(CMSIS_DEVICE_SOURCES system_stm32l1xx.c)
elseif(STM32_FAMILY STREQUAL "L4")
    if(NOT STM32Cube_DIR)
        set(STM32Cube_DIR "/opt/STM32Cube_FW_L4_V1.9.0")
        message(STATUS "No STM32Cube_DIR specified, using default: " ${STM32Cube_DIR})
    endif()

    list(APPEND CMSIS_COMMON_HEADERS core_cm4.h)
    set(CMSIS_DEVICE_HEADERS stm32l4xx.h system_stm32l4xx.h)
    set(CMSIS_DEVICE_SOURCES system_stm32l4xx.c) 
endif()

find_path(CMSIS_COMMON_INCLUDE_DIR ${CMSIS_COMMON_HEADERS}
    PATH_SUFFIXES include stm32${STM32_FAMILY_LOWER} cmsis
    HINTS ${STM32Cube_DIR}/Drivers/CMSIS/Include/
    CMAKE_FIND_ROOT_PATH_BOTH
)

find_path(CMSIS_DEVICE_INCLUDE_DIR ${CMSIS_DEVICE_HEADERS}
    PATH_SUFFIXES include stm32${STM32_FAMILY_LOWER} cmsis
    HINTS ${STM32Cube_DIR}/Drivers/CMSIS/Device/ST/STM32${STM32_FAMILY}xx/Include
    CMAKE_FIND_ROOT_PATH_BOTH
)

set(CMSIS_INCLUDE_DIRS
    ${CMSIS_DEVICE_INCLUDE_DIR}
    ${CMSIS_COMMON_INCLUDE_DIR}
)

foreach(SRC ${CMSIS_DEVICE_SOURCES})
    string(MAKE_C_IDENTIFIER "${SRC}" SRC_CLEAN)
    set(CMSIS_${SRC_CLEAN}_FILE SRC_FILE-NOTFOUND)
    find_file(CMSIS_${SRC_CLEAN}_FILE ${SRC}
        PATH_SUFFIXES src stm32${STM32_FAMILY_LOWER} cmsis
        HINTS ${STM32Cube_DIR}/Drivers/CMSIS/Device/ST/STM32${STM32_FAMILY}xx/Source/Templates/
        CMAKE_FIND_ROOT_PATH_BOTH
    )
    list(APPEND CMSIS_SOURCES ${CMSIS_${SRC_CLEAN}_FILE})
endforeach()

include(FindPackageHandleStandardArgs)

find_package_handle_standard_args(CMSIS DEFAULT_MSG CMSIS_INCLUDE_DIRS)
